name: Build and test

on: [push, pull_request]

jobs:
  win64:
    name: Build & Test Win64
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: cargo build --release

      - name: Install MariaDB drivers
        run: |
         Invoke-WebRequest https://dlm.mariadb.com/1920029/MariaDB/mariadb-10.6.5/winx64-packages/mariadb-10.6.5-winx64.msi -OutFile mariadb_connector.msi
         msiexec /i "mariadb_connector.msi" /L*V "mariadb_connector.log" /qn
         type "mariadb_connector.log"

      - run: |
         cargo install odbcsv
         odbcsv -vvvv list-drivers

      # Databases need to be run independently because docker on win64 doesn't support
      # linux containers
      - name: Run Microsoft SQL Server
        uses: potatoqualitee/mssqlsuite@v1
        with:
          install: sqlengine, sqlclient
          sa-password: <YourStrong@Passw0rd>
          show-log: true

      - name: Run MariaDB
        uses: ankane/setup-mariadb@v1
        with:
          database: test_db

      - name: Setup MariaDB
        run: mysql -D test_db -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'my-secret-pw';flush privileges;"

      - name: Test
        run: cargo test --release -- --skip sqlite_3

  win32:
    name: Build Win32
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latests rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: i686-pc-windows-msvc
          default: true
          override: true
      
      - name: Build
        run: cargo build --release

  osx:
    name: Build OS-X
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latests rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: cargo build --release

  linux:
    name: Build & Test Linux
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build test container
        run: docker-compose build test_linux

      - name: Test
        run: docker-compose run test_linux
