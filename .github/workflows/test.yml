name: Build and test

on: [push, pull_request]

jobs:
  win64:
    name: Build & Test Win64
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Setup C++ build tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          # Cross compile 32 bit to 64
          arch: x86_amd64

      # Enable before merge
      # - name: Build
      #   run: cargo build --release

      - name: Install MariaDB drivers
        run: |
         Invoke-WebRequest https://dlm.mariadb.com/1936453/Connectors/odbc/connector-odbc-3.1.15/mariadb-connector-odbc-3.1.15-win64.msi -OutFile C:\mariadb_connector.msi
         Start-Process msiexec -ArgumentList "/i C:\mariadb_connector.msi /qn" -wait

      # The SQLite source to be consumed by SQLite ODBC in order to compile from source
      - name: Download SQLite drivers
        run: |
         Invoke-WebRequest http://www.ch-werner.de/sqliteodbc/sqliteodbc-0.9998.tar.gz -OutFile C:\sqliteodbc-0.9998.tar.gz
         7z x C:\sqliteodbc-0.9998.tar.gz -oC:\
         7z x C:\sqliteodbc-0.9998.tar -oC:\
         Invoke-WebRequest https://www.sqlite.org/2022/sqlite-amalgamation-3370200.zip -OutFile C:\sqlite-amalgamation-3370200.zip
         7z x C:\sqlite-amalgamation-3370200.zip -oC:\
         Copy-Item -Path "C:\sqlite-amalgamation-3370200\*" -Destination "C:\sqliteodbc-0.9998" -Recurse

      - run: ls C:\sqliteodbc-0.9998
      
      - name: Compile SQLite drivers
        working-directory: C:\sqliteodbc-0.9998
        run: |
         (Get-Content -Path .\VERSION) -replace "\.", "," > VERSION_C
         ((Get-Content -Path resource.h.in) -replace "--VERS--", (Get-Content -Path VERSION)) -replace "--VERS_C--", (Get-Content -Path VERSION_C) > resource3.h
         cl -I. -Gs -GX -D_WIN64 -D_DLL -nologo -DHAVE_SQLITE3COLUMNTABLENAME=1 -DHAVE_SQLITE3PREPAREV2=1 -DHAVE_SQLITE3VFS=1 -DHAVE_SQLITE3LOADEXTENSION=1 -DSQLITE_ENABLE_COLUMN_METADATA=1 -DWITHOUT_SHELL=1 /c sqlite3odbc.c
         cl -I. -Gs -GX -D_WIN64 -D_DLL -nologo -DHAVE_SQLITE3COLUMNTABLENAME=1 -DHAVE_SQLITE3PREPAREV2=1 -DHAVE_SQLITE3VFS=1 -DHAVE_SQLITE3LOADEXTENSION=1 -DSQLITE_ENABLE_COLUMN_METADATA=1 -DWITHOUT_SHELL=1 /c sqlite3.c
         rc -I. -fo sqlite3odbc.res -r sqlite3odbc.rc
         link /NODEFAULTLIB /RELEASE /NOLOGO /MACHINE:X64 /SUBSYSTEM:WINDOWS /DLL sqlite3odbc.obj sqlite3.obj sqlite3odbc.res  -def:sqlite3odbc.def -out:sqlite3odbc.dll msvcrt.lib odbccp32.lib kernel32.lib  user32.lib comdlg32.lib

      - run: ls C:\sqliteodbc-0.9998

      - name: Fail early
        run: exit 1

      - name: Install SQLite drivers
        run : |
         mkdir "C:\Program Files\SQLite ODBC Driver for Win64"
         Copy-Item -Path "docker\dev\sqlite_odbc\*" -Destination "C:\Program Files\SQLite ODBC Driver for Win64" -Recurse
         ls "C:\Program Files\SQLite ODBC Driver for Win64"
         REG ADD "HKLM\SOFTWARE\ODBC\ODBCINST.INI\ODBC Drivers" /v "SQLite3 ODBC Driver" /t REG_SZ /d Installed /f
         REG ADD "HKLM\SOFTWARE\ODBC\ODBCINST.INI\SQLite3 ODBC Driver" /v "Driver" /t REG_SZ /d "C:\Program Files\SQLite ODBC Driver for Win64\sqlite3odbc.dll" /f
         REG ADD "HKLM\SOFTWARE\ODBC\ODBCINST.INI\SQLite3 ODBC Driver" /v "Setup" /t REG_SZ /d "C:\Program Files\SQLite ODBC Driver for Win64\sqlite3odbc.dll" /f
         REG ADD "HKLM\SOFTWARE\ODBC\ODBCINST.INI\SQLite3 ODBC Driver" /v "UsageCount" /t REG_DWORD /d 1

      - run: |
         cargo install odbcsv
         odbcsv -vvvv list-drivers

      # Databases need to be run independently because docker on win64 doesn't support
      # linux containers
      - name: Run Microsoft SQL Server
        uses: potatoqualitee/mssqlsuite@v1
        with:
          install: sqlengine, sqlclient
          sa-password: <YourStrong@Passw0rd>
          show-log: true

      - name: Run MariaDB
        uses: ankane/setup-mariadb@v1
        with:
          database: test_db

      - name: Setup MariaDB
        run: mysql -D test_db -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'my-secret-pw';flush privileges;"

      - name: Test
        run: cargo test --release

  win32:
    name: Build Win32
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latests rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: i686-pc-windows-msvc
          default: true
          override: true
      
      - name: Build
        run: cargo build --release

  osx:
    name: Build OS-X
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latests rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Build
        run: cargo build --release

  linux:
    name: Build & Test Linux
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build test container
        run: docker-compose build test_linux

      - name: Test
        run: docker-compose run test_linux
